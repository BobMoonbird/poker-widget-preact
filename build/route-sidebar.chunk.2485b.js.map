{"version":3,"sources":["webpack:///./components/Controls/index.js","webpack:///./routes/sidebar/style.less","webpack:///./utils/metadata.js","webpack:///./utils/getCards.js","webpack:///./utils/getCardURL.js","webpack:///./components/Controls/style.less","webpack:///./utils/getBackCardUrl.js","webpack:///./utils/getRandomInteger.js","webpack:///./routes/sidebar/components/Card.js","webpack:///./routes/sidebar/components/CardsList.js","webpack:///./routes/sidebar/components/ChosenCard.js","webpack:///./utils/createCard.js","webpack:///./components/Placeholder/index.js","webpack:///./routes/sidebar/components/CardPicker.js","webpack:///./routes/sidebar/index.js","webpack:///./routes/sidebar/components/style.less","webpack:///./appconstants/index.js","webpack:///./components/Placeholder/style.less"],"names":["Controls","handleReveal","event","backCards","updates","props","onBeforeReveal","getCards","filter","widget","getMetadata","side","map","id","value","metadata","updateMetadata","url","getCardURL","miro","board","widgets","update","onReveal","handleClear","allCardIds","deleted","onBeforeClear","type","deleteById","console","log","length","onClear","render","class","style","wrapper","onClick","this","Component","module","exports","appId","APP_ID","Error","nextMetadata","get","window","location","origin","getBackCardUrl","min","max","BACK_CARD_MAX_NUMBER","Math","floor","random","Card","state","loaded","handleLoad","setState","disabled","label","index","cards","delay","cardWrapper","animationDelay","card","title","Boolean","data-loaded","data-value","backgroundImage","data-image-url","hiddenImg","onLoad","src","CardsList","CARDS_LIST","key","ChosenCard","handleSwap","onBeforeSwap","error","chosenCardWidget","onError","onSwap","CARDS_MAP","chosenCardWrapper","X_STEP","Y_STEP","bindBy","step","round","Placeholder","severity","children","data-severity","RATIO","Cards","time","Date","now","count","loading","showList","ref","createRef","onReady","cardValue","ui","initDraggableItemsContainer","current","draggableItemSelector","el","dataset","getDraggableItemPreview","width","offsetWidth","height","onDrop","x","y","hideList","create","capabilities","editable","createCard","author","setChosenCard","stateCallback","checkCardExistence","clearChosenCard","setTimeout","handleBeforeClear","init","myCard","currentUser","toString","Promise","all","getId","find","onWidgetsDeleted","data","componentDidMount","controlsWrapper","Sidebar","updateTime","increment","timer","setInterval","componentWillUnmount","clearInterval","sidebar","reduce","acc","item"],"mappings":"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","file":"route-sidebar.chunk.2485b.js","sourcesContent":["import { h, Component } from 'preact';\r\nimport style from './style';\r\nimport getCards from 'utils/getCards';\r\nimport { getMetadata, updateMetadata } from 'utils/metadata';\r\nimport getCardURL from 'utils/getCardURL';\r\n\r\nclass Controls extends Component {\r\n\thandleReveal = async event => {\r\n\t\tif (typeof this.props.onBeforeReveal === 'function') {\r\n\t\t\tthis.props.onBeforeReveal(event);\r\n\t\t}\r\n\t\tconst cards = await getCards();\r\n\r\n\t\tconst backCards = cards.filter(\r\n\t\t\twidget => getMetadata(widget).side === 'back'\r\n\t\t);\r\n\r\n\t\tconst updates = backCards.map(widget => {\r\n\t\t\tconst { id } = widget;\r\n\t\t\tconst { value } = getMetadata(widget);\r\n\t\t\treturn {\r\n\t\t\t\tid,\r\n\t\t\t\tmetadata: updateMetadata(widget, {\r\n\t\t\t\t\tside: 'face',\r\n\t\t\t\t}),\r\n\t\t\t\turl: getCardURL('face', value),\r\n\t\t\t};\r\n\t\t});\r\n\t\tawait miro.board.widgets.update(updates);\r\n\t\tif (typeof this.props.onReveal === 'function') {\r\n\t\t\tthis.props.onReveal();\r\n\t\t}\r\n\t};\r\n\r\n\thandleClear = async event => {\r\n\t\tif (typeof this.props.onBeforeClear === 'function') {\r\n\t\t\tthis.props.onBeforeClear(event);\r\n\t\t}\r\n\r\n\t\tconst cards = await getCards();\r\n\r\n\t\tconst allCardIds = cards\r\n\t\t\t.filter(widget => getMetadata(widget).type === 'card')\r\n\t\t\t.map(widget => widget.id);\r\n\r\n\t\tconst deleted = miro.board.widgets.deleteById(allCardIds);\r\n\r\n\t\t// eslint-disable-next-line no-console\r\n\t\tconsole.log('deleted', deleted.length, 'cards');\r\n\t\tif (typeof this.props.onClear === 'function') {\r\n\t\t\tthis.props.onClear();\r\n\t\t}\r\n\t};\r\n\r\n\trender() {\r\n\t\treturn (\r\n\t\t\t<nav class={style.wrapper}>\r\n\t\t\t\t<button\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclass=\"miro-btn miro-btn--primary miro-btn--small\"\r\n\t\t\t\t\tonClick={this.handleReveal}\r\n\t\t\t\t>\r\n\t\t\t\t\tReveal all\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclass=\"miro-btn miro-btn--secondary miro-btn--small\"\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tonClick={this.handleClear}\r\n\t\t\t\t>\r\n\t\t\t\t\tClear all\r\n\t\t\t\t</button>\r\n\t\t\t</nav>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Controls;\r\n\r\n/*\r\nconst roundResults = backCards =>\r\n\tbackCards.reduce((acc, widget) => {\r\n\t\tconst { value } = getMetadata(widget);\r\n\t\tif (value in acc) {\r\n\t\t\tacc[value]++;\r\n\t\t} else {\r\n\t\t\tacc[value] = 1;\r\n\t\t}\r\n\r\n\t\treturn acc;\r\n\t}, {});\r\n\r\nconst resultShapePoint = backCards =>\r\n\tbackCards.reduce(\r\n\t\t(acc, widget, index, { length }) => {\r\n\t\t\tacc.x = acc.x + widget.x / length;\r\n\t\t\tacc.y = Math.max(acc.y, widget.y);\r\n\t\t\treturn acc;\r\n\t\t},\r\n\t\t{ x: 0, y: 0 }\r\n\t);\r\n\r\n\t*/\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"sidebar\":\"sidebar__U7KN2\"};","import { APP_ID } from 'appconstants';\r\n\r\nexport const getMetadata = (widget, appId = APP_ID) => {\r\n\tif (!appId) {\r\n\t\tthrow new Error('No appId specified');\r\n\t}\r\n\treturn widget.metadata[appId] || {};\r\n};\r\nexport const updateMetadata = (widget, nextMetadata, appId = APP_ID) => ({\r\n\t...widget.metadata,\r\n\t[appId]: {\r\n\t\t...widget.metadata[appId],\r\n\t\t...nextMetadata,\r\n\t},\r\n});\r\n\r\nexport const setMetadata = (widget, nextMetadata, appId = APP_ID) => ({\r\n\t...widget.metadata,\r\n\t[appId]: nextMetadata,\r\n});\r\n","import { getMetadata } from './metadata';\r\n\r\nexport default async function getCards() {\r\n\tconst widgets = await miro.board.widgets.get();\r\n\treturn widgets.filter(widget => getMetadata(widget).type === 'card');\r\n}\r\n","const { BASE_URL } = process.env;\r\n\r\nexport default (side, value = '') =>\r\n\t`${window.location.origin}/assets/cards/${side}${value}.svg`;\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper__18AHL\"};","import getCardURL from './getCardURL';\r\nimport getRandomInteger from './getRandomInteger';\r\n\r\n// it's better to read from fs\r\nconst BACK_CARD_MAX_NUMBER = 6;\r\n\r\nexport default function getBackCardUrl() {\r\n\tconst value = getRandomInteger(1, BACK_CARD_MAX_NUMBER);\r\n\treturn getCardURL('back', value);\r\n}\r\n","export default function getRandomInteger(min, max) {\r\n\treturn Math.floor(Math.random() * (max - min + 1)) + min;\r\n}\r\n","import { h, Component } from 'preact';\r\nimport style from './style';\r\nimport getCardURL from 'utils/getCardURL';\r\n\r\nconst DELAY_ANIMATION = 50;\r\n\r\nclass Card extends Component {\r\n\tstate = {\r\n\t\tloaded: false,\r\n\t};\r\n\r\n\thandleLoad = () => {\r\n\t\tthis.setState({ loaded: true });\r\n\t};\r\n\r\n\trender({ value, disabled, label, index, cards = [] }) {\r\n\t\tconst url = getCardURL('face', value);\r\n\t\tconst delay = (cards.length - index) * DELAY_ANIMATION;\r\n\r\n\t\treturn (\r\n\t\t\t<div class={style.cardWrapper} style={{ animationDelay: `-${delay}ms` }}>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclass={style.card}\r\n\t\t\t\t\ttitle={label}\r\n\t\t\t\t\tdisabled={Boolean(disabled)}\r\n\t\t\t\t\tdata-loaded={this.state.loaded ? 'yes' : 'no'}\r\n\t\t\t\t\tdata-value={value}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\tbackgroundImage: `url(${url})`,\r\n\t\t\t\t\t}}\r\n\t\t\t\t\tdata-image-url={url}\r\n\t\t\t\t>\r\n\t\t\t\t\t<span>{label}</span>\r\n\t\t\t\t</button>\r\n\t\t\t\t<img class={style.hiddenImg} onLoad={this.handleLoad} src={url} />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n\r\nexport default Card;\r\n","import { h, Fragment } from 'preact';\r\nimport Card from './Card';\r\nimport { CARDS_LIST } from 'appconstants';\r\n\r\nconst CardsList = ({ disabled }) => (\r\n\t<Fragment>\r\n\t\t{CARDS_LIST.map(({ label, value }, index, cards) => (\r\n\t\t\t<Card\r\n\t\t\t\tkey={value}\r\n\t\t\t\tdisabled={disabled}\r\n\t\t\t\tlabel={label}\r\n\t\t\t\tvalue={value}\r\n\t\t\t\tindex={index}\r\n\t\t\t\tcards={cards}\r\n\t\t\t/>\r\n\t\t))}\r\n\t</Fragment>\r\n);\r\nexport default CardsList;\r\n","import { h, Component } from 'preact';\r\nimport Card from './Card';\r\nimport style from './style';\r\nimport { CARDS_MAP } from 'appconstants';\r\nimport { getMetadata } from 'utils/metadata';\r\n\r\nexport default class ChosenCard extends Component {\r\n\thandleSwap = async event => {\r\n\t\tif (typeof this.props.onBeforeSwap === 'function') {\r\n\t\t\tthis.props.onBeforeSwap(event);\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tawait miro.board.widgets.deleteById([this.props.chosenCardWidget.id]);\r\n\t\t\tif (typeof this.props.onSwap === 'function') {\r\n\t\t\t\tthis.props.onSwap(event);\r\n\t\t\t}\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(this.props.chosenCardWidget.id);\r\n\t\t\tconsole.error(error);\r\n\t\t\tif (typeof this.props.onError === 'function') {\r\n\t\t\t\tthis.props.onError(error);\r\n\t\t\t}\r\n\t\t}\r\n\t};\r\n\r\n\trender({ chosenCardWidget }) {\r\n\t\tconst { value, label } = CARDS_MAP[getMetadata(chosenCardWidget).value];\r\n\t\treturn (\r\n\t\t\t<section class={style.chosenCardWrapper}>\r\n\t\t\t\t<h4 class=\"miro-h2\">Your card</h4>\r\n\r\n\t\t\t\t<Card value={value} label={label} disabled />\r\n\r\n\t\t\t\t<button\r\n\t\t\t\t\tonClick={this.handleSwap}\r\n\t\t\t\t\ttype=\"button\"\r\n\t\t\t\t\tclass=\"miro-btn miro-btn--secondary miro-btn--small\"\r\n\t\t\t\t>\r\n\t\t\t\t\tSwap\r\n\t\t\t\t</button>\r\n\t\t\t</section>\r\n\t\t);\r\n\t}\r\n}\r\n","import { APP_ID } from 'appconstants';\r\n\r\nconst X_STEP = 10;\r\nconst Y_STEP = 20;\r\n\r\nconst bindBy = (value, step) => Math.round(value / step) * step;\r\n\r\nexport default function createCard({ x, y, url, metadata }) {\r\n\treturn miro.board.widgets.create({\r\n\t\ttype: 'image',\r\n\t\turl,\r\n\t\tx: bindBy(x, X_STEP),\r\n\t\ty: bindBy(y, Y_STEP),\r\n\t\tcapabilities: {\r\n\t\t\teditable: false,\r\n\t\t},\r\n\t\tmetadata: {\r\n\t\t\t[APP_ID]: metadata,\r\n\t\t},\r\n\t});\r\n}\r\n","import { h } from 'preact';\r\nimport style from './style';\r\n\r\nconst Placeholder = ({ severity, title, children }) => (\r\n\t<section class={style.wrapper} data-severity={severity}>\r\n\t\t<h4 class=\"miro-h4\">{title}</h4>\r\n\t\t{children}\r\n\t</section>\r\n);\r\n\r\nexport default Placeholder;\r\n","import { h, Fragment, Component, createRef } from 'preact';\r\nimport style from './style';\r\nimport Controls from 'components/Controls';\r\nimport { getMetadata } from 'utils/metadata';\r\nimport getBackCardUrl from 'utils/getBackCardUrl';\r\nimport CardsList from './CardsList';\r\nimport ChosenCard from './ChosenCard';\r\nimport getCards from 'utils/getCards';\r\nimport createCard from 'utils/createCard';\r\nimport Placeholder from 'components/Placeholder';\r\n\r\n// eslint-disable-next-line no-magic-numbers\r\nconst RATIO = 3 / 2;\r\n// const WIDTH = 100;\r\n\r\nexport default class Cards extends Component {\r\n\tstate = {\r\n\t\ttime: Date.now(),\r\n\t\tcount: 10,\r\n\t\tloading: true,\r\n\t\terror: null,\r\n\t\tchosenCardWidget: null,\r\n\t\tshowList: true,\r\n\t};\r\n\r\n\tref = createRef();\r\n\r\n\tonReady = () => {\r\n\t\tlet cardValue;\r\n\t\tlet url;\r\n\t\tmiro.board.ui.initDraggableItemsContainer(this.ref.current, {\r\n\t\t\tdraggableItemSelector: `.${style.card}`,\r\n\t\t\tonClick: el => {\r\n\t\t\t\tcardValue = el.dataset.value;\r\n\t\t\t},\r\n\t\t\tgetDraggableItemPreview: el => {\r\n\t\t\t\turl = getBackCardUrl();\r\n\t\t\t\tcardValue = el.dataset.value;\r\n\t\t\t\treturn {\r\n\t\t\t\t\twidth: el.offsetWidth,\r\n\t\t\t\t\theight: el.offsetWidth * RATIO,\r\n\t\t\t\t\turl,\r\n\t\t\t\t};\r\n\t\t\t},\r\n\t\t\tonDrop: async (x, y) => {\r\n\t\t\t\tthis.hideList();\r\n\t\t\t\tconst metadata = {\r\n\t\t\t\t\ttype: 'card',\r\n\t\t\t\t\tside: 'back',\r\n\t\t\t\t\tvalue: cardValue,\r\n\t\t\t\t\tauthor: this.state.id,\r\n\t\t\t\t};\r\n\t\t\t\tconst added = await createCard({\r\n\t\t\t\t\tx,\r\n\t\t\t\t\ty,\r\n\t\t\t\t\turl,\r\n\t\t\t\t\tmetadata,\r\n\t\t\t\t});\r\n\t\t\t\tconst [card] = added;\r\n\t\t\t\tthis.setChosenCard(card);\r\n\t\t\t},\r\n\t\t});\r\n\t};\r\n\r\n\tsetChosenCard = (widget, stateCallback) => {\r\n\t\tconst chosenCardWidget = widget;\r\n\t\tthis.setState({ chosenCardWidget, showList: false }, stateCallback);\r\n\t\tthis.checkCardExistence(widget.id);\r\n\t};\r\n\r\n\tcheckCardExistence = async id => {\r\n\t\ttry {\r\n\t\t\t// if it's updating -- it exists\r\n\t\t\tawait miro.board.widgets.update([{ id }]);\r\n\t\t\tsetTimeout(this.checkCardExistence, 1000, id);\r\n\t\t} catch (error) {\r\n\t\t\t// if it's an error -- it does not exist\r\n\t\t\tthis.clearChosenCard();\r\n\t\t}\r\n\t};\r\n\r\n\thideList = () => {\r\n\t\tthis.setState({ showList: false });\r\n\t};\r\n\r\n\tshowList = () => {\r\n\t\tthis.setState({ showList: true });\r\n\t};\r\n\r\n\tclearChosenCard = stateCallback => {\r\n\t\tthis.setState({ chosenCardWidget: null, showList: true }, stateCallback);\r\n\t};\r\n\r\n\thandleBeforeClear = async () => {\r\n\t\tthis.clearChosenCard();\r\n\t};\r\n\r\n\thandleReveal = async () => {};\r\n\r\n\tinit = async () => {\r\n\t\tif (!miro.currentUser) {\r\n\t\t\treturn this.setState({\r\n\t\t\t\terror: 'Seems like the app is running not as a part of Miro board',\r\n\t\t\t});\r\n\t\t}\r\n\t\ttry {\r\n\t\t\tconst [id, cards] = await Promise.all([\r\n\t\t\t\tmiro.currentUser.getId(),\r\n\t\t\t\tgetCards(),\r\n\t\t\t]);\r\n\t\t\tconst myCard = cards.find(widget => getMetadata(widget).author === id);\r\n\t\t\tif (myCard) {\r\n\t\t\t\tthis.setChosenCard(myCard);\r\n\t\t\t}\r\n\t\t\t// eslint-disable-next-line react/no-did-mount-set-state\r\n\t\t\tthis.setState({ id, loading: false }, () => {\r\n\t\t\t\tmiro.onReady(this.onReady);\r\n\t\t\t\t// const { WIDGETS_DELETED } = miro.enums.event;\r\n\t\t\t\t// console.log(WIDGETS_DELETED);\r\n\t\t\t\t// miro.addListener(WIDGETS_DELETED, this.onWidgetsDeleted);\r\n\t\t\t});\r\n\t\t} catch (error) {\r\n\t\t\tconsole.error(error);\r\n\t\t\t// eslint-disable-next-line react/no-did-mount-set-state\r\n\t\t\tthis.setState({\r\n\t\t\t\terror: error.toString(),\r\n\t\t\t});\r\n\t\t}\r\n\t};\r\n\r\n\tonWidgetsDeleted = event => {\r\n\t\tconst { data: widgets } = event;\r\n\t\tconst { chosenCardWidget } = this.state;\r\n\t\tif (!chosenCardWidget) {\r\n\t\t\treturn false;\r\n\t\t}\r\n\t\tif (widgets.find(widget => widget.id === chosenCardWidget.id)) {\r\n\t\t\tthis.clearChosenCard();\r\n\t\t}\r\n\t};\r\n\r\n\tcomponentDidMount() {\r\n\t\tthis.init();\r\n\t}\r\n\r\n\trender({}, { chosenCardWidget, showList, loading, error }) {\r\n\t\tif (error) {\r\n\t\t\treturn (\r\n\t\t\t\t<Placeholder severity=\"error\" title=\"Oooops...\">\r\n\t\t\t\t\t<code>{error}</code>\r\n\t\t\t\t</Placeholder>\r\n\t\t\t);\r\n\t\t}\r\n\t\treturn (\r\n\t\t\t<Fragment>\r\n\t\t\t\t<div class={style.controlsWrapper}>\r\n\t\t\t\t\t<Controls\r\n\t\t\t\t\t\tonReveal={this.handleReveal}\r\n\t\t\t\t\t\tonBeforeClear={this.handleBeforeClear}\r\n\t\t\t\t\t/>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div ref={this.ref} class={style.wrapper}>\r\n\t\t\t\t\t{!chosenCardWidget && !loading && <CardsList disabled={!showList} />}\r\n\t\t\t\t</div>\r\n\t\t\t\t{Boolean(chosenCardWidget) && (\r\n\t\t\t\t\t<ChosenCard chosenCardWidget={chosenCardWidget} />\r\n\t\t\t\t)}\r\n\t\t\t</Fragment>\r\n\t\t);\r\n\t}\r\n}\r\n","import { h, Component } from 'preact';\r\nimport style from './style';\r\nimport CardPicker from './components/CardPicker';\r\n\r\nexport default class Sidebar extends Component {\r\n\tstate = {\r\n\t\ttime: Date.now(),\r\n\t\tcount: 10,\r\n\t};\r\n\r\n\t// update the current time\r\n\tupdateTime = () => {\r\n\t\tthis.setState({ time: Date.now() });\r\n\t};\r\n\r\n\tincrement = () => {\r\n\t\tthis.setState({ count: this.state.count + 1 });\r\n\t};\r\n\r\n\t// gets called when this route is navigated to\r\n\tcomponentDidMount() {\r\n\t\t// start a timer for the clock:\r\n\t\tthis.timer = setInterval(this.updateTime, 1000);\r\n\t}\r\n\r\n\t// gets called just before navigating away from the route\r\n\tcomponentWillUnmount() {\r\n\t\tclearInterval(this.timer);\r\n\t}\r\n\r\n\t// Note: `user` comes from the URL, courtesy of our router\r\n\trender({ user }, { time, count }) {\r\n\t\treturn (\r\n\t\t\t<div class={style.sidebar}>\r\n\t\t\t\t<CardPicker />\r\n\t\t\t</div>\r\n\t\t);\r\n\t}\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cardWrapper\":\"cardWrapper__1MWxn\",\"appear\":\"appear__3Vz41\",\"card\":\"card__3IJo5\",\"floating\":\"floating__34mDX\",\"hiddenImg\":\"hiddenImg__1BjkP\",\"chosenCardWrapper\":\"chosenCardWrapper__3hGqt\",\"wrapper\":\"wrapper__3uuSv\",\"controlsWrapper\":\"controlsWrapper__1xvok\"};","export const APP_ID = '3074457347007443177';\r\n\r\nexport const CARDS_LIST = [\r\n\t{\r\n\t\tlabel: '0',\r\n\t\tvalue: 0,\r\n\t},\r\n\t{\r\n\t\tlabel: '½',\r\n\t\tvalue: 0.5,\r\n\t},\r\n\t{\r\n\t\tlabel: '1',\r\n\t\tvalue: 1,\r\n\t},\r\n\t{\r\n\t\tlabel: '2',\r\n\t\tvalue: 2,\r\n\t},\r\n\t{\r\n\t\tlabel: '3',\r\n\t\tvalue: 3,\r\n\t},\r\n\t{\r\n\t\tlabel: '5',\r\n\t\tvalue: 5,\r\n\t},\r\n\t{\r\n\t\tlabel: '10',\r\n\t\tvalue: 10,\r\n\t},\r\n\t{\r\n\t\tlabel: '20',\r\n\t\tvalue: 20,\r\n\t},\r\n\t{\r\n\t\tlabel: '40',\r\n\t\tvalue: 40,\r\n\t},\r\n\t{\r\n\t\tlabel: '100',\r\n\t\tvalue: 100,\r\n\t},\r\n\t{\r\n\t\tlabel: '☕',\r\n\t\tvalue: 'coffee',\r\n\t},\r\n\t{\r\n\t\tlabel: '∞',\r\n\t\tvalue: 'infinity',\r\n\t},\r\n];\r\n\r\nexport const CARDS_MAP = CARDS_LIST.reduce((acc, item) => {\r\n\tacc[item.value] = item;\r\n\treturn acc;\r\n}, {});\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"wrapper__jTLi2\"};"],"sourceRoot":""}